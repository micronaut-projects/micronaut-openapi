[versions]
managed-swagger = "2.2.19"
managed-javadoc-parser = "0.3.1"
managed-jsoup = "1.17.1"
managed-html2md-converter = "0.64.8"
managed-parboiled = "1.4.1"
managed-freemarker = "2.3.32"
managed-pegdown = "1.6.0"

kotlin = "1.9.21"
ksp = "1.9.21-1.0.15"
jspecify = "0.3.0"
jdt-annotation = "2.2.700"
android-annotation = "1.7.0"
spotbugs-annotations = "4.8.2"
openapi-generator = "7.1.0"
swagger-parser = "1.0.68"
swagger-parser-v3 = "2.1.19"
javaparser = "3.25.6"
commons-codec = "1.16.0"

micronaut = "4.2.0"
micronaut-security = "4.4.0"
micronaut-serde = "2.4.0"
micronaut-rxjava2 = "2.1.0"
micronaut-rxjava3 = "3.1.0"
micronaut-reactor = "3.1.0"
micronaut-gradle-plugin = "4.2.0"
micronaut-groovy = "4.1.0"
micronaut-validation = "4.2.0"
micronaut-data = "4.3.1"
micronaut-test = "4.1.0"
micronaut-kotlin = "4.1.0"
micronaut-logging = "1.2.0"
micronaut-platform = "4.2.0"

[libraries]
# Core
micronaut-core = { module = 'io.micronaut:micronaut-core-bom', version.ref = 'micronaut' }
micronaut-logging = { module = "io.micronaut.logging:micronaut-logging-bom", version.ref = "micronaut-logging" }
micronaut-security = { module = "io.micronaut.security:micronaut-security-bom", version.ref = "micronaut-security" }
micronaut-serde = { module = "io.micronaut.serde:micronaut-serde-bom", version.ref = "micronaut-serde" }
micronaut-rxjava2 = { module = "io.micronaut.rxjava2:micronaut-rxjava2-bom", version.ref = "micronaut-rxjava2" }
micronaut-rxjava3 = { module = "io.micronaut.rxjava3:micronaut-rxjava3-bom", version.ref = "micronaut-rxjava3" }
micronaut-reactor = { module = "io.micronaut.reactor:micronaut-reactor-bom", version.ref = "micronaut-reactor" }
micronaut-gradle-plugin = { module = "io.micronaut.gradle:micronaut-minimal-plugin", version.ref = "micronaut-gradle-plugin"}
micronaut-groovy = { module = "io.micronaut.groovy:micronaut-groovy-bom", version.ref = "micronaut-groovy" }
micronaut-validation = { module = "io.micronaut.validation:micronaut-validation-bom", version.ref = "micronaut-validation" }
micronaut-data = { module = "io.micronaut.data:micronaut-data-bom", version.ref = "micronaut-data" }
micronaut-test = { module = "io.micronaut.test:micronaut-test-bom", version.ref = "micronaut-test" }
micronaut-kotlin = { module = "io.micronaut.kotlin:micronaut-kotlin-bom", version.ref = "micronaut-kotlin" }
micronaut-platform = { module = "io.micronaut.platform:micronaut-platform", version.ref = "micronaut-platform"}

managed-swagger-core = { module = "io.swagger.core.v3:swagger-core", version.ref = "managed-swagger" }
managed-swagger-annotations = { module = "io.swagger.core.v3:swagger-annotations", version.ref = "managed-swagger" }
managed-swagger-models = { module = "io.swagger.core.v3:swagger-models", version.ref = "managed-swagger" }

managed-javadoc-parser = { module = "com.github.chhorz:javadoc-parser", version.ref = "managed-javadoc-parser" }
managed-html2md-converter = { module = "com.vladsch.flexmark:flexmark-html2md-converter", version.ref = "managed-html2md-converter" }
managed-jsoup = { module = "org.jsoup:jsoup", version.ref = "managed-jsoup" }
managed-parboiled = { module = "org.parboiled:parboiled-java", version.ref = "managed-parboiled" }
managed-freemarker = { module = "org.freemarker:freemarker", version.ref = "managed-freemarker" }
managed-pegdown = {module = "org.pegdown:pegdown", version.ref = "managed-pegdown"}

# Versions from BOM
junit-jupiter-engine = { module = "org.junit.jupiter:junit-jupiter-engine" }
junit-jupiter-params = { module = "org.junit.jupiter:junit-jupiter-params" }
jackson-datatype-jsr310 = { module = "com.fasterxml.jackson.datatype:jackson-datatype-jsr310" }
jackson-dataformat-yaml = { module = "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml" }
kotlinx-coroutines-reactor = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-reactor" }

kotlin-stdlib-jdk8 = { module = "org.jetbrains.kotlin:kotlin-stdlib-jdk8", version.ref = "kotlin" }
kotlin-reflect = { module = "org.jetbrains.kotlin:kotlin-reflect", version.ref = "kotlin" }
jspecify = { module = "org.jspecify:jspecify", version.ref = "jspecify" }
spotbugs-annotations = { module = "com.github.spotbugs:spotbugs-annotations", version.ref = "spotbugs-annotations" }
jdt-annotation = { module = "org.eclipse.jdt:org.eclipse.jdt.annotation", version.ref = "jdt-annotation" }
android-annotation = { module = "androidx.annotation:annotation", version.ref = "android-annotation" }
javaparser = { module = "com.github.javaparser:javaparser-symbol-solver-core", version.ref = "javaparser" }
commons-codec = { module = "commons-codec:commons-codec", version.ref = "commons-codec" }

openapi-generator = { module = "org.openapitools:openapi-generator", version.ref = "openapi-generator" }
swagger-parser = { module = "io.swagger:swagger-parser", version.ref = "swagger-parser" }
swagger-parser-v3 = { module = "io.swagger.parser.v3:swagger-parser-v3", version.ref = "swagger-parser-v3" }

[plugins]
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
kotlin-kapt = { id = "org.jetbrains.kotlin.kapt", version.ref = "kotlin" }
kotlin-allopen = { id = "org.jetbrains.kotlin.plugin.allopen", version.ref = "kotlin" }
