dependencies {
    annotationProcessor "io.micronaut:micronaut-inject-java"
    annotationProcessor "io.micronaut.docs:micronaut-docs-asciidoc-config-props:$micronautDocsVersion"

    compileOnly "io.micronaut:micronaut-management"
    compileOnly "io.micronaut:micronaut-inject-java"

    implementation "io.micronaut:micronaut-http"
    implementation "io.micronaut:micronaut-http-server"
    implementation 'io.projectreactor:reactor-core'

    api "io.swagger.core.v3:swagger-core:$swaggerVersion"
    api "io.swagger.core.v3:swagger-models:$swaggerVersion"
    api "io.swagger.core.v3:swagger-annotations:$swaggerVersion"

    testImplementation "org.spockframework:spock-core:$spockVersion"
    testImplementation "io.micronaut:micronaut-runtime"
    testImplementation "io.micronaut.security:micronaut-security"
    testImplementation "io.micronaut:micronaut-inject-groovy"
    testImplementation "io.micronaut:micronaut-inject-groovy-test"
    testImplementation "io.micronaut:micronaut-inject-java"
    testImplementation "io.micronaut:micronaut-inject-java-test"
    testImplementation "io.micronaut.beanvalidation:micronaut-hibernate-validator"
    testImplementation "io.reactivex.rxjava2:rxjava:$rxJava2Version"
    testImplementation "io.micronaut:micronaut-management"
    testImplementation 'jakarta.inject:jakarta.inject-api:2.0.1'
    if (org.gradle.internal.jvm.Jvm.current().getJavaVersion().isJava8()) {
        testImplementation files(org.gradle.internal.jvm.Jvm.current().toolsJar)
    }
}

//compileJava.options.compilerArgs += '-deprecation'

test {
    useJUnitPlatform()
}
