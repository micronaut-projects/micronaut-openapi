plugins {
    id 'io.micronaut.build.internal.openapi-module'
}

dependencies {
    annotationProcessor(libs.micronaut.inject.java)
    annotationProcessor(libs.micronaut.docs.asciidoc.config.props)

    compileOnly(libs.micronaut.management)
    compileOnly(libs.micronaut.inject.java)

    implementation(libs.micronaut.http)
    implementation(libs.micronaut.http.server)
    implementation(libs.reactor.core)

    api(libs.swagger.core)
    api(libs.swagger.models)
    api(libs.swagger.annotations)

    testImplementation(libs.spock.core)
    testImplementation(libs.micronaut.runtime)
    testImplementation(libs.micronaut.security)
    testImplementation(libs.micronaut.inject.groovy)
    testImplementation(libs.micronaut.inject.groovy.test)
    testImplementation(libs.micronaut.inject.java)
    testImplementation(libs.micronaut.inject.java.test)
    testImplementation(libs.micronaut.hibernate.validator)
    testImplementation(libs.rxjava2)
    testImplementation(libs.rxjava3)
    testImplementation(libs.micronaut.management)
    testImplementation(libs.jakarta.inject.api)
    if (org.gradle.internal.jvm.Jvm.current().getJavaVersion().isJava8()) {
        testImplementation files(org.gradle.internal.jvm.Jvm.current().toolsJar)
    }
}

//compileJava.options.compilerArgs += '-deprecation'

test {
    useJUnitPlatform()
}
