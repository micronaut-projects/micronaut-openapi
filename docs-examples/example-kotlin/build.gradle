import org.jetbrains.kotlin.gradle.dsl.JvmTarget

plugins {
    alias(libs.plugins.kotlin.jvm)
    alias(libs.plugins.kotlin.kapt)
    alias(libs.plugins.kotlin.allopen)
}

repositories {
    mavenCentral()
}

dependencies {
    kapt projects.micronautOpenapi
    kapt(mn.micronaut.inject.java)
    kapt(mnValidation.micronaut.validation)

    kaptTest(mn.micronaut.inject.java)

    testImplementation(libs.managed.swagger.annotations)
    testImplementation(mn.reactor)
    testImplementation(mn.snakeyaml)
    testImplementation(mn.micronaut.runtime)
    testImplementation(mnValidation.validation)
    testImplementation(libs.kotlin.stdlib.jdk8)
    testImplementation(libs.kotlin.reflect)
    testImplementation(mnTest.micronaut.test.junit5)

    testCompileOnly(mn.micronaut.inject.java)

    testRuntimeOnly(libs.junit.jupiter.engine)
    testRuntimeOnly(mn.logback.classic)
}

test {
    useJUnitPlatform()

    jvmArgs '-Duser.country=US'
    jvmArgs '-Duser.language=en'
    testLogging {
        showStandardStreams = true
        exceptionFormat = 'full'
    }
    failFast = true
}

compileTestKotlin {
    compilerOptions {
        jvmTarget = JvmTarget.JVM_17
        javaParameters = true
    }
}
ext.skipDocumentation=true
